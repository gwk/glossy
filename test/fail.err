fail.py:8: utest failure: <lambda>
  arg 0=0
  arg 1=1
  arg x='x'
  arg y='y'
  expected value: True
  returned value: False

fail.py:9: utest failure: raise_unexpected
  expected value: True
  raised exception: Exception('unexpected',)

fail.py:11: utest failure: <lambda>
  expected exception: Exception('expected',)
  returned value: True

fail.py:12: utest failure: raise_unexpected
  expected exception: Exception('expected',)
  raised exception: Exception('unexpected',)

fail.py:14: utest failure: range
  arg 0=0
  expected sequence: [0]
  returned sequence: []

fail.py:15: utest failure: <lambda>
  expected sequence: [0]
  returned value: 0
  raised exception: TypeError("'int' object is not iterable",)

fail.py:17: utest failure: 'utest_val fail test'
  expected value: True
  returned value: False

fail.py:20: utest failure: add
  arg 0=1
  arg 1=2
  expected value: 0
  returned value: 3

fail.py:20: utest failure: add
  arg 0=2
  arg 1=1
  expected value: 0
  returned value: 3

fail.py:21: utest failure: add
  arg 0='a'
  arg 1='a'
  expected exception: Exception('expected',)
  raised exception: ValueError("invalid literal for int() with base 10: 'a'",)

fail.py:21: utest failure: add
  arg 0='a'
  arg 1='a'
  expected exception: Exception('expected',)
  raised exception: ValueError("invalid literal for int() with base 10: 'a'",)

fail.py:24: utest failure: a_plus_bc
  arg 0=1
  arg 1=2
  arg 2=3
  expected value: 0
  returned value: 7

fail.py:24: utest failure: a_plus_bc
  arg 0=1
  arg 1=3
  arg 2=2
  expected value: 0
  returned value: 7

fail.py:25: utest failure: a_plus_bc
  arg 0=1
  arg 1='a'
  arg 2='a'
  expected exception: Exception('expected',)
  raised exception: ValueError("invalid literal for int() with base 10: 'a'",)

fail.py:25: utest failure: a_plus_bc
  arg 0=1
  arg 1='a'
  arg 2='a'
  expected exception: Exception('expected',)
  raised exception: ValueError("invalid literal for int() with base 10: 'a'",)

