| iotest: DEBUG MODE ON.
|
| Case:
|   args: None
|   broken: False
|   cmd: 'false'
|   code: None
|   compile: None
|   compile_cmds: []
|   compile_timeout: None
|   coverage: None
|   coverage_targets: []
|   desc: None
|   dflt_src_paths: []
|   dir: None
|   env: None
|   err_mode: None
|   err_path: None
|   err_val: None
|   files: None
|   in_: None
|   links: None
|   name: 'fail-dbg'
|   out_mode: None
|   out_path: None
|   out_val: None
|   skip: None
|   stem: 'test-meta/fail-dbg'
|   test_cmd: ['false']
~   test_dir: '.+/iotest/_build/test-meta/fail-dbg'
|   test_dir_suffix: None
~   test_env: {'BUILD':'.+/iotest/_build', 'LANG':'en_US.UTF-8', 'NAME':'fail-dbg', 'PATH':'.+', 'PROJ':'.+/iotest', 'SRC':'NONE', 'STEM':'test-meta/fail-dbg'}
|   test_expectations: [FileExpectation('err', 'equal', ''), FileExpectation('out', 'equal', '')]
|   test_in: None
|   test_info_paths: ['test-meta/fail-dbg.iot']
|   test_links: []
|   timeout: None
| input path: /dev/null
~ test cwd: .+/iotest/_build/test-meta/fail-dbg
~ test cmd: false </dev/null # 1>.+/iotest/_build/test-meta/fail-dbg/out 2>.+/iotest/_build/test-meta/fail-dbg/err
| check_file_exp: FileExpectation('err', 'equal', '')
| check_file_exp: FileExpectation('out', 'equal', '')
|
| fail_fast:
| Traceback (most recent call last):
~   File ".+/iotest/iotest.py", line \d+, in <module>
|     if __name__ == '__main__': main()
~   File ".+/iotest/iotest.py", line \d+, in main
|     ok = try_case(ctx, case)
~   File ".+/iotest/iotest.py", line \d+, in try_case
|     if not ok: ctx.fail_fast()
~   File ".+/iotest.py", line \d+, in fail_fast
|     raise Exception('iotest: stopping after error (-dbg).') from e
| Exception: iotest: stopping after error (-dbg).
